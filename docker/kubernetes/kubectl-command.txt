1. get      获取列出一个或多个资源的信息。（资源分为pod、instance、service等很多种）
2. describe 输出指定的一个/多个资源的详细信息。（一般describe状态有问题节点，如Pending等）
3. logs     输出pod中一个容器的日志。（如果pod只包含一个容器则可以省略容器名）
4. create   指定Yaml或Json，创建资源。（通过文件或者控制台输入）
5. edit     编辑服务器上定义的资源。（文件默认输出格式为YAML。要以JSON格式编辑，请指定“-o json”选项。）
6. rolling-update   执行指定ReplicationController的滚动更新。（不中断业务的更新方式）
7. delete   删除一个资源（可以是pod、instance等）
8. exec     在容器内部执行命令

==========================================
一. get
获取所有namespace： kubectl get ns
在指定的namespace下获取资源： kubectl -n {$nameSpace} get pods
以yaml格式输出资源： kubectl -n {$nameSpace} -o yaml
通用格式： kubectl get {$sourceType} --all-namespaces

po（pod）
ns（命名空间namespace）
instance（实例）
svc（service服务）：定义了一个 Pod 的逻辑分组，一种可以访问它们的策略（微服务）。
cm（configMap）：存储全局配置变量的，将分布式系统中不同模块的环境变量统一到一个对象中管理。
ds（deamonSet）：在每台计算节点上运行一个守护进程（如日志采集等）,有时pod处于pending可能是因为某个deamonSet没起来。
deploy（deployment）：用于启动（上线/部署）一个Pod或者ReplicaSet。这个如果有问题，那么其他依赖它来部署的资源就肯定不会正常了。

二、describe 描述一个资源：
kubectl -n {$nameSpace} describe {$resourceType} {$resourceName}

三、logs  查看日志，--tail指定只看最后1000行：
kubectl -n {$nameSpace} logs --tail=1000 {$podName} | less

五、create    通过配置文件名创建一个集群资源对象。
create -f {$yamlorJsonFilePath}

