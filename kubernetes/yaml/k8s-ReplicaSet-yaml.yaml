# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/replica-set-v1/
# ReplicaSet 确保在任何给定时间运行指定数量的 pod 副本
# ReplicaSet ensures that a specified number of pod replicas are running at any given time.
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: replica-set-name
  labels:
    app: ReplicaSetApp
    release: stable
spec:
  # https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/label-selector/#LabelSelector
  # required, Selector is a label query over pods that should match the replica count
  selector:
    # An empty label selector matches all objects. A null label selector matches no objects.
    matchExpressions:
    - key: app
      #  Valid operators are In, NotIn, Exists and DoesNotExist.
      operator: In
      # If the operator is In or NotIn, the values array must be non-empty.
      # If the operator is Exists or DoesNotExist, the values array must be empty. 
      values: ["nginx"]
    # map of {key,value} pairs
    # A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions
    # whose key field is "key", the operator is "In", and the values array contains only "value"
    matchLabels:
      app: nginx
  # Template is the object that describes the pod that will be created if insufficient replicas are detected.
  # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-template-v1/#PodTemplateSpec
  template: {}
  replicas: 3

---
# simple
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: replica-set-name
  labels:
    app: ReplicaSetApp
    release: stable
spec:
  selector:
    matchExpressions:
    - key: app
      operator: In
      values: ["nginx"]
    matchLabels:
      app: nginx
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      containers:
      - name: pod-nginx-container
        image: nginx:1.16.1
        ports:
        - containerPort: 80
  replicas: 3