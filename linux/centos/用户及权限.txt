Linux 系统管理员之所以是 root 不是因为它名叫 root
而是因为它的 UID(User IDentification) 的数值为 0

1. useradd 添加用户
useradd [参数] 用户名
-d 		指定家目录(/home/username)
-m 		创建用户目录
-c 		注释
-e 		用户到期时间(YYYY-MM-DD)
-f 		用户密码失效的时间
-u 		指定 UID		
-g 		指定初始化的用户组
-G 		指定一个或多个拓展用户组
-N		不创建与用户同名的基本用户组
-s		指定默认 SHELL

示例: useradd -G lily1,lily2,lily3 -m -d /test/home/aster  aster

-----------------------------------------
2. groupadd 添加用户组
groupadd [参数] 组名称
-g	指定用户组 GID
示例: groupadd -g 60 tgroup

-----------------------------------------
3. usermod 修改用户属性
usermod [参数] 用户名
-c 		用户备注信息
-d -m 	重新指定用户家目录并自动把数据迁移到新家目录
-e		账户到期时间(YYYY-MM-DD)
-g 		变更所属用户组
-G 		指定拓展用户组
-L 		锁定用户禁止登录
-U 		解锁用户
-s 		变更默认终端
-u 		修改 UID

示例: usermod -s /bin/sh lily1
-----------------------------------------
4. passwd 修改用户密码
passwd [参数] 用户名
-l 		锁定用户禁止登录
-d 		删除用户密码
-u 		解锁用户
--stdin 允许通过标准输入修改密码
-e 		强制用户下次登录时修改密码
-S(大) 	显示用户是否被锁定

-----------------------------------------
5. gpasswd 修改用户组密码
gpasswd [参数] 用户名 用户组名
-a 		添加用户到组	-d 		删除组内用户
-A		指定组内管理员

-----------------------------------------
6. userdel 删除用户
-r 		同时删除用户极其家目录
-f 		强制删除

================================================================
7. 文件权限
-	普通文件	d	目录文件
l 	链接文件 	b	块设备文件
c	字符设备	p	管道文件

-rw-------. 1 root root 1463 Feb 23 23:42 anaconda-ks.cfg

8. 特殊权限
SUID(1) 	所有者权限 x 变为 s (让二进制程序执行者临时用户属组权限)
SGID(2)	所属组权限 x 变为 s (非本用户不能删除本用户文件、目录)
SBIT(4)	其他人权限 x 变为 t (本目录下创建的文件、命令继承父命令的所属组)

chmod 7777 id.log

-------------------------------------------
8. chattr 设置文件的隐藏权限
chattr [参数] 文件 (+参数 添加隐藏功能到文件 -参数 移除功能到文件)
i	无法对文件进行修改(不能新建或者删除)
a	仅允许补充(追加)内容，无法覆盖/删除
S(大) 文件内容在变更后立即同步到硬盘
s(小) 彻底从硬盘删除文件,不可以恢复
A	不再修改此文件的最后访问时间(atime)
b	不再修改文件或者目录的存取时间
示例: chattr +a chattr.txt

9. lsattr 显示文件的隐藏属性
lsattr [参数] 文件
示例: lsattr chattr.txt

--------------------------------------------
10. setfacl 设置文件的特殊权限
setfacl [参数] 文件名称
-m	修改文件的 ACL 权限 	-x	移除文件的 ACL
-b	移除该文件的所有 ACL 	-k	移除默认的 ACL 权限
-d	操纵使用默认的 ACL		-R 	递归设置
ACL格式: [d[efault]:] [u[ser]:]uid [:perms]
		 [d[efault]:] g[roup]:gid [:perms]
		 [d[efault]:] o[ther][:] [:perms]
		 [d[efault]:] m[ask][:] [:perms]

示例: setfacl -m u:lily:rwx lily.txt
	setfacl -x lily lily.txt

11. getfacl 获取设置的特殊权限
getfacl 文件名称
示例: getfacl file.txt


--------------------------------------------
		id 	用户的信息
1. su 切换用户身份，并不会退出当前用户
su [参数] 用户名称
(注意: su )与命令之间加个 "-" 表示完全切换,而不保留原始信息
示例: su - lily

2. sudo 给普通用户使用特定命令的权限
sudo [参数] 命令名称
-l		列出当前用户可执行的命令
-u 		以指定的用户身份来执行命令
-k		清空密码有效时间
-b		在后台执行指定命令
-p		更改密码提示语
配置文件: /etc/sudoers
可以使用 visudo 命令来配置用户权限