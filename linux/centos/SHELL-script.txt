#!/bin/bash
#For example, hello
echo "Hello world!"

变量赋值:
	var="变量字符串" 
	var=100 (字面数值变量)
	var=$(cat /etc/passwd) (命令执行后的结果变量)

1. 接收用户参数
$0		当前 Shell 脚本程序名称
$#		总共有多少参数
$* 		所在位置上的参数值字符串
$? 		显示上一次命令返回值
$(1-n) 	n 位置上的参数值

$? 		上一条命令执行后返回值
&&		当前面一条语句执行成功后才执行后面的命令
|| 		当前面一条语句执行失败后才执行后面的命令
! 		取反
注意: 在此处如果相等返回的值是 0, 而不是 1
[ -e /dev/cdrom ] && echo "Exit"
[ $USER = root ] || echo "User"
[ ! $USER = root ] echo "Administrator"


1. 用户参数判断
测试语句格式: [条件表达式]
测试的语句划分为:
	文件测试，逻辑测试，整数值比较，字符串比较

文件测试参数:
-d 		文件是否为目录类型		-e 		测试文件是否存在
-f 		判断是否为一般文件		-r 		当前用户是否有可读权限
-w 		当前用户是否有可写入权限 	-x 	当前用户是否有可执行权限

整数比较:
-eq 	是否相等 		-ne 	是否不等于
-gt 	大于			-lt 	小于
-ge 	大于或等于 		-le 	小于或等于

字符串比较:
=		比较字符串内容是否相等 		!= 		比较字符串内容是否不同
-z 		判断字符串是否为空

2. 流程控制

if 条件测试
	then 命令
fi

if 流程控制
	then 命令1
	else 命令2
fi

if 流程控制1
	then 命令1
elif 流程控制2
	then 命令2
else
	命令3
fi

for 变量名 in 取值列表
do
	命令
done

while 操作流程
do
	命令
done

case 变量值 in
	模式1) 命令1
	;;
	模式2) 命令2
	;;	
	....
	默认命令
esac
