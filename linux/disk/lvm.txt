LVM(Logical volume Manager)是逻辑卷管理的简称
LVM最大的特点就是可以对磁盘进行动态管理。因为逻辑卷的大小是可以动态调整的，而且不会丢失现有的数据
4个基本的逻辑卷概念:
PE　　(Physical Extend)　　物理拓展
PV　　(Physical Volume)　　物理卷
VG　　(Volume Group)　　   卷组
LV　　(Logical Volume)　　 逻辑卷

LV(Logical Volume),逻辑卷就是用来取代我们之前的分区，
我们通过对逻辑卷进行格式化，然后进行挂载操作就可以使用了

创建顺序
1. 物理硬盘格式化成PV(Physical Volume)
格式化物理卷的过程中LVM是将底层的硬盘划分为了一个一个的PE(Physical Extend),
LVM磁盘管理中PE的默认大小是4M大小，其实PE就是我们逻辑卷管理的最基本单位。

2.创建一个VG(Volume Group)
卷组在这里我们可以将其抽象化成一个空间池，VG的作用就是用来装PE的，可以把一个或者多个PV加到VG当中，
第一步操作时就已经将该硬盘划分成了多个PE，多个PV加到VG里面后，VG里面就存放了许多来自不同PV中的PE，
通常创建一个卷组的时候我们会为其取一个名字，也就是该VG的名字。

3.基于VG创建我们最后要使用的LV(Logical Volume)
PV以及VG创建好以后我们是不能够直接使用的，因为PV、VG是我们逻辑卷底层的东西，
其实最后使用的是在VG基础上创建的LV(Logical Volume),
所以第三步操作就是基于VG来创建我们最终要使用的LV。

所以创建逻辑卷其实就是从VG中拿出指定数量的PE，VG中的PE可以来自不同的PV，可以创建的逻辑卷的大小
取决于VG当中PE存在的数量，并且我们创建的逻辑卷其大小一定是PE的整数倍
(即逻辑卷的大小一定要是4M的整数倍)。

4.将我们创建好的LV进行文件系统的格式化，然后挂载使用

总结：
(1)物理磁盘被格式化为PV，空间被划分为一个个的PE
(2)不同的PV加入到同一个VG中，不同PV的PE全部进入到了VG的PE池内
(3)LV基于PE创建，大小为PE的整数倍，组成LV的PE可能来自不同的物理磁盘
(4)LV现在就直接可以格式化后挂载使用了
(5)LV的扩充缩减实际上就是增加或减少组成该LV的PE数量，其过程不会丢失原始数据

注意：最小的存储单位 PE

yum install lvm2
====================================================================
1. 创建物理卷PV
pvcreate(选项)(参数)
-f：强制创建物理卷，不需要用户确认； 
-u：指定设备的UUID； 
-y：所有的问题都回答“yes”； 
-Z：是否利用前4个扇区。

pvcreate /dev/hda{6,7,8,9}

2. 分別表示每个 PV 的信息与系统所有 PV 的信息： ->  pvscan
3. 更详细的列示出系统上面每个 PV 信息：-> pvdisplay
4. 删除物理卷： -> pvremove /dev/sdb2
5. 修改物理卷属性：-> 
pvchange(选项)(参数): ->  -u：生成新的UUID； -x：是否允许分配PE。
pvchange命令允许管理员改变物理卷的分配许可。
如果物理卷出现故障，可以使用pvchange命令禁止分配物理卷上的PE。


pvcreate ：将实体partition创建成为PV；
pvscan ：搜索目前系统里面任何具有PV的磁盘或分区；
pvdisplay ：显示出目前系统上面的PV状态；
pvremove ：将 PV 属性移除，让该 partition 不具有 PV 属性。
====================================================================

====================================================================
创建卷组(VG)，并将PV加入到卷组中
1. 创建卷组
vgcreate(选项)(参数)
    > vgcreate [卷组名称] [pv1, pv2....]
-l：卷组上允许创建的最大逻辑卷数； -p：卷组中允许添加的最大物理卷数； -s：卷组上的物理卷的PE大小。(4M默认)
卷组名：要创建的卷组名称； 物理卷列表：要加入到卷组中的物理卷列表。
vgcreate vg1000 /dev/sdb1 /dev/sdb2 

2. 显示卷组信息
vgdisplay(选项)(参数)
-A：仅显示活动卷组的属性； -s：使用短格式输出的信息。
显示LVM卷组的信息。如果不指定"卷组"参数，则分别显示所有卷组的属性。
vgdisplay vg1000

3. 查找系统中存在的LVM卷组，并显示找到的卷组列表
vgscan(选项)

vgscan

4. 删除LVM卷组中的物理卷来减少卷组容量。不能删除LVM卷组中剩余的最后一个物理卷。
vgreduce(选项)(参数)
-a：如果命令行中没有指定要删除的物理卷，则删除所有的空物理卷；
--removemissing：删除卷组中丢失的物理卷，使卷组恢复正常状态。

卷组：指定要操作的卷组名称； 物理卷列表：指定要删除的物理卷列表。

从卷组"vg2000"中移除物理卷/dev/sdb2
vgreduce vg2000 /dev/sdb2

5. 用户删除LVM卷组
vgremove(选项)(参数)
-f：强制删除。
卷组：指定要删除的卷组名称。
vgremove vg1000

6. 动态扩展LVM卷组，它通过向卷组中添加物理卷来增加卷组的容量。
LVM卷组中的物理卷可以在使用vgcreate命令创建卷组时添加，也可以使用vgextend命令动态的添加。
vgextend(选项)(参数)
-d：调试模式； -t：仅测试。
卷组：指定要操作的卷组名称； 物理卷列表：指定要添加到卷组中的物理卷列表。

向卷组"vg2000"中添加物理卷
vgextend vg2000 /dev/sdb2


vgcreate ：创建vg命令；
vgscan ：搜索系统上面是否有 VG 存在？
vgdisplay ：显示目前系统上面的 VG 状态；
vgextend ：在 VG 内添加额外的 PV ；
vgreduce ：在 VG 内移除 PV；
vgchange ：配置 VG 是否启动 (active)；
vgremove ：删除一个 VG
====================================================================

====================================================================
创建LV(逻辑卷)
1. 创建LVM的逻辑卷
逻辑卷是创建在卷组之上的。逻辑卷对应的设备文件保存在卷组目录下
lvcreate(选项)(卷组名|卷组路径)
-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节； 
-l：指定逻辑卷的大小（LE数）。
-n<逻辑卷名称>
    > lvcreate [参数] -n [LV名称] [VG卷组名称]
lvcreate -L 200M vg1000

2. 扫描当前系统中存在的所有的LVM逻辑卷
lvscan(选项)
-b：显示逻辑卷的主设备和次设备号。

3. 显示LVM逻辑卷空间大小、读写状态和快照信息等属性
lvdisplay(参数)
逻辑卷：指定要显示属性的逻辑卷对应的设备文件。
lvdisplay /dev/vg1000/lvol0


4. 扩展逻辑卷大小
在线扩展逻辑卷的空间大小，而不中断应用程序对逻辑卷的访问。
使用lvextend命令动态在线扩展磁盘空间，整个空间扩展过程对于应用程序来说是完全透明的。

lvextend(选项)(逻辑卷路径)
-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节； 前面加 ‘+’，否则绝对值
-l：指定逻辑卷的大小（LE数）。  前面加 ‘+’，否则绝对值
-n: 在扩展之前不执行fsck

lvextend -L +100M /dev/vg1000/lvol0

5. 减少LVM逻辑卷占用的空间大小
使用lvreduce命令收缩逻辑卷的空间大小有可能会删除逻辑卷上已有的数据，所以在操作前必须进行确认。
lvreduce(选项)(逻辑卷名称|逻辑卷路径)
-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节； 前面加 ‘-’，否则去绝对值
-l：指定逻辑卷的大小（LE数）。

lvreduce -L -50M /dev/vg1000/lvol0

6. 调整LVM逻辑卷的空间大小，可以增大空间和缩小空间
lvresize命令调整逻辑卷空间大小和缩小空间时需要谨慎，因为它有可能导致数据丢失。
lvresize(选项)(逻辑卷名称|逻辑卷路径)(物理卷路径)
-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节； -l：指定逻辑卷的大小（LE数）。
前面加‘+’或‘-’对应与添加空间和减小空间

lvresize -L +200M /dev/vg1000/lvol0

7. 删除指定LVM逻辑卷
如果逻辑卷已经使用mount命令加载，则不能使用lvremove命令删除。
必须使用umount命令卸载后，逻辑卷方可被删除。
lvremove(选项)(参数)
-f：强制删除。 
逻辑卷：指定要删除的逻辑卷。

lvremove /dev/vg1000/lvol0

8. 更改逻辑卷属性
lvchange (选项)(逻辑卷路径)
-p<r|rw> : 更改访问权限为只读或读写
-a<a|e|l|y|n>: 控制使用逻辑卷的可用性

lvcreate ：创建 LV
lvscan ：查询系统上面的 LV ；
lvdisplay ：显示系统上面的 LV 状态
lvextend ：在 LV 里面添加容量！
lvreduce ：在 LV 里面减少容量；
lvremove ：删除一个 LV ！
lvresize ：对 LV 进行容量大小的调整！
====================================================================

====================================================================
用来增大或者收缩未加载的“ext2/ext3”文件系统的大小
如果文件系统是处于mount状态下，那么它只能做到扩容，前提条件是内核支持在线resize。
linux kernel 2.6支持在mount状态下扩容但仅限于ext3文件系统。

resize2fs(选项)(设备)
-d：打开调试特性； 
-M: 收缩的文件系统最小大小
-p：打印已完成的百分比进度条； 
-f：强制执行调整大小操作，覆盖掉安全检查操作； 
-F：开始执行调整大小前，刷新文件系统设备的缓冲区。

resize2fs /dev/vbirdvg/vbirdlv

====================================================================

====================================================================
LVM扩容步骤

1. 扩大逻辑卷的大小 -> lvresize -L +200G 
2. 调整文件大小 -> resize2f 

LVM缩小容量
1. 卸载LV  -> unmount
2. e2fsck -f /dev/lvm1/lv1 
3. 调整LV大小  -> resize2f 设备 缩小后的大小
4. 缩小LV文件的大小  -> lvresize -L -200M

块照的创建
    > lvcreate -s -n lv1-snap(快照名) -L 300M /dev/mapper/vg1-lv1(基于lv)
快照还原:
	> lvconvert --merge /dev/(快照设备)

====================================================================