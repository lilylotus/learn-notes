本地端口转发了，它的命令格式是： ssh -L <local port>:<remote host>:<remote port> <SSH hostname>
    ssh -L 7001:localhost:389 LdapServerHost
远程转发: ssh -R <local port>:<remote host>:<remote port> <SSH hostname>

** 本地转发与远程转发的对比与分析
SSH Server，SSH Client，LdapServertHost，LdapClientHost，本地转发，远程转发，这么多的名词的确容易让人糊涂。
首先，SSH 端口转发自然需要 SSH 连接，而 SSH 连接是有方向的，从 SSH Client 到 SSH Server 。
而我们的应用也是有方向的，比如需要连接 LDAP Server 时，LDAP Server 自然就是 Server 端，
我们应用连接的方向也是从应用的 Client 端连接到应用的 Server 端。如果这两个连接的方向一致，那我们就说它是本地转发。
而如果两个方向不一致，我们就说它是远程转发。

Server 端的端口都是预定义的固定端口（SSH Server 的端口 22，LDAP 的端口 389），
而 Client 端的端口都是动态可供我们选择的端口（如上述例子中选用的 7001 端口）。
如果 Server 端的两个端口都在同一台机器，Client 端的两个端口都在另一台机器上，那么这就是本地连接；
如果这四个端口交叉分布在两个机器上，每台机器各有一个 Server 端端口，一个 Client 端端口，那就是远程连接。

本地转发命令中的 <remote host> 和 <SSH hostname> 可以是不同的机器么？
ssh -L <local port>:<remote host>:<remote port> <SSH hostname>
    ssh -g -L 7001:<B>:389 <D>
（A）<-> (C) 以及 (B)<->(D) 之间的连接并不是安全连接，它们之间没有经过 SSH 的加密及解密。
如果他们之间的网络并不是值得信赖的网络连接，我们就需要谨慎使用这种连接方式了

动态转发,动态转发的命令格式：$ ssh -D <local port> <SSH Server>

SSH端口转发,SSH有三种端口转发模式
本地端口转发(Local Port Forwarding)
远程端口转发(Remote Port Forwarding)
动态端口转发(Dynamic Port Forwarding)
对于本地/远程端口转发，两者的方向恰好相反。动态端口转发则可以用于科学上网。

SSH端口转发也被称作SSH隧道(SSH Tunnel)，因为它们都是通过SSH登陆之后，在SSH客户端与SSH服务端之间建立了一个隧道，从而进行通信。SSH隧道是非常安全的，因为SSH是通过加密传输数据的(SSH全称为Secure Shell)。

为啥需要本地端口转发呢？
云主机的防火墙默认只打开了22端口，如果需要访问3000端口的话，需要修改防火墙。
为了保证安全，防火墙需要配置允许访问的IP地址。但是，本地公网IP通常是网络提供商动态分配的，是不断变化的。
这样的话，防火墙配置需要经常修改，就会很麻烦。


1. 本地端口转发
将发送到本地端口的请求，转发到目标端口。就可以通过访问本地端口，来访问目标端口的服务。
使用 -L 属性，就可以指定需要转发的端口，语法是这样的:
    -L 本地网卡地址:本地端口:目标地址:目标端口
通过本地端口转发，将发送到本地主机A1端口2000的请求，转发到远程云主机B1的3000端口。

# 在本地主机A1登陆远程云主机B1，并进行本地端口转发
ssh -L localhost:2000:localhost:3000 root@103.59.22.17

实际上，-L选项中的本地网卡地址是可以省略的，这时表示2000端口绑定了本地主机A1的所有网卡：
# 在本地主机A1登陆远程云主机B1，并进行本地端口转发。请求被转发到远程云主机B2上
ssh -L 2000:192.168.59.100:3000 root@103.59.22.17

2. 远程端口转发 : 本地主机A1运行了一个服务，端口为3000，远程云主机B1需要访问这个服务。
为啥需要远程端口转发呢？
本地主机是没有独立的公网IP的，它与同一网络中的主机共享一个IP。没有公网IP，云主机是无法访问本地主机上的服务的。

什么是远程端口转发？
远程端口转发，就是将发送到远程端口的请求，转发到目标端口。
就可以通过访问远程端口，来访问目标端口的服务。
使用 -R 属性，就可以指定需要转发的端口，语法是这样的:
    -R 远程网卡地址:远程端口:目标地址:目标端口

通过远程端口转发，可以将发送到远程云主机B1端口2000的请求，转发到本地主机A1端口3000
# 在本地主机A1登陆远程云主机B1，并进行远程端口转发
ssh -R localhost:2000:localhost:3000 root@103.59.22.17

远程网卡地址可以省略，目标地址也可以是其他主机地址。假设本地主机A2的局域网IP地址为192.168.0.100。
# 在本地主机A1登陆远程云主机B1，并进行远程端口转发
ssh -R 2000:192.168.0.100:3000 root@103.59.22.17

====================================================
3. 动态端口转发 : 远程云主机B1运行了多个服务，分别使用了不同端口，本地主机A1需要访问这些服务
为啥需要动态端口转发呢？
由于防火墙限制，本地主机A1并不能直接访问远程云主机B1上的服务，因此需要进行端口转发；
另一方面，为每个端口分别创建本地端口转发非常麻烦。

什么是动态端口转发？
对于本地端口转发和远程端口转发，都存在两个一一对应的端口，分别位于SSH的客户端和服务端，
而动态端口转发则只是绑定了一个本地端口，而 目标地址:目标端口 则是不固定的。
目标地址:目标端口 是由发起的请求决定的，
比如，请求地址为 192.168.1.100:3000，则通过SSH转发的请求地址也是 192.168.1.100:3000
    -D 本地网卡地址:本地端口
通过动态端口转发，可以将在本地主机A1发起的请求，转发到远程主机B1，而由B1去真正地发起请求。

# 在本地主机A1登陆远程云主机B1，并进行动态端口转发
ssh -D localhost:2000 root@103.59.22.17
而在本地发起的请求，需要由Socket代理(Socket Proxy)转发到SSH绑定的2000端口。

链式端口转发
本地端口转发与远程端口转发结合起来使用，可以进行链式转发。
假设A主机在公司，B主机在家，C主机为远程云主机。
A主机上运行了Node.js服务，需要在B主机上访问该服务。
由于A和B不在同一个网络，且A主机没有独立公共IP地址，所以无法直接访问服务。

通过本地端口转发，将发送到B主机3000端口的请求，转发到远程云主机C的2000端口。
# 在B主机登陆远程云主机C，并进行本地端口转发
ssh -L localhost:3000:localhost:2000 root@103.59.22.17
通过远程端口转发，将发送到远程云主机C端口2000的请求，转发到A主机的3000端口。

# 在A主机登陆远程云主机C，并进行远程端口转发
ssh -R localhost:2000:localhost:3000 root@103.59.22.17
这样，在主机B可以通过访问http://localhost:3000来访问主机A上的服务。


