@Cacheable、@CachePut、@CacheEvict 注释介绍
@Cacheable 主要针对方法配置，能够根据方法的请求参数对其结果进行缓存
@CachePut  主要针对方法配置，能够根据方法的请求参数对其结果进行缓存
            和 @Cacheable 不同的是，它每次都会触发真实方法的调用
@CachEvict 主要针对方法配置，能够根据一定的条件对缓存进行清空


@Cacheable 注解来缓存方法,只需要在方法上标注 @Cacheable 注解就可以
整个@Cacheable的流程是:先从缓存中读取，如果没有再调用方法获取数据，然后把数据添加到缓存中

缓存数据一致性保证,@CacheEvict移除缓存
加上@CacheEvict注解,来更新查询方法的结果缓存
这时候再调用新的查询接口,我们就不会走缓存里的方法,会重新去数据库中查询.
因为调用修改用户的方法的时候, @CacheEvict会根据相应的key和value作为条件从缓存中移除相应的数据.

@CachePut 既要保证方法被调用，又希望结果被缓存
@CachePut 注释，可以确保方法被执行，同时方法的返回值也被记录到缓存中.