<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 配置加载 -->
	<context:property-placeholder location="classpath:property/mysql.properties" file-encoding="utf-8" />
	<!-- 加载数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${driverClass}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${user}" />
		<property name="password" value="${password}" />

<!--  		<property name="minPoolSize" value="${pool.minPoolSize}" />
		<property name="maxPoolSize" value="${pool.maxPoolSize}" />
		<property name="initialPoolSize" value="${pool.initialPoolSize}" />
		<property name="acquireIncrement" value="${pool.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${pool.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${pool.acquireRetryDelay}" />
		<property name="maxIdleTime" value="${pool.maxIdleTime}" />
		<property name="numHelperThreads" value="${pool.numHelperThreads}" />
		<property name="maxStatementsPerConnection" value="${pool.maxStatementsPerConnection}" /> -->
	</bean>
	<!-- 事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- Mybatis + Spring -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
	</bean>
	<!-- Mybatis 接口扫描，自动注入 IOC 容器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="basePackage" value="cn.nihility.dao.mybatis"></property>
	</bean>
	<!-- 批量 SqlSession 管理 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>

	<!-- 事务配置 -->
	<tx:advice id="serviecTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 在 service 包和其子包的任意方法 -->
		<aop:pointcut expression="execution(* cn.nihility.service..*.*(..))" id="mpointcut"/>
		<aop:advisor advice-ref="serviecTxAdvice" pointcut-ref="mpointcut"/>
	</aop:config>
</beans>
