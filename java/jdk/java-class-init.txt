1. 父级 static {}
2. 子级 static {}

3. 父级 {} -> constructor
4. 子级 {} -> constructor

=====================================
规范定义类的初始化时机为 "initialize on first active use" - "在首次主动使用时初始化"
装载和链接在初始化之前就要完成。

创建类的新实例--new，反射，克隆或反序列
调用类的静态方法
操作类和接口的静态字段（final字段除外）
调用Java的特定的反射方法
初始化一个类的子类
指定一个类作为Java虚拟机启动时的初始化类（含有main方法的启动类）
除了以上6种情形，java中类的其他使用方式都是被动使用，不会导致类的初始化

一个实例变量在对象初始化的过程中会被赋值几次？
在本文的前面部分，我们提到过，JVM在为一个对象分配完内存之后，会给每一个实例变量赋予默认值，这个时候实例变量被第一次赋值，这个赋值过程是没有办法避免的。
如果我们在实例变量初始化器中对某个实例x变量做了初始化操作，那么这个时候，这个实例变量就被第二次赋值了。
如果我们在实例初始化器中，又对变量x做了初始化操作，那么这个时候，这个实例变量就被第三次赋值了。
如果我们在类的构造函数中，也对变量x做了初始化操作，那么这个时候，变量x就被第四次赋值。
也就是说，一个实例变量，在Java的对象初始化过程中，最多可以被初始化4次。