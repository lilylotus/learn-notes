<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>${log4j.version}</version>
</dependency>

<!-- 桥接：告诉Slf4j使用Log4j2 -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-slf4j-impl</artifactId>
    <version>${log4j.version}</version>
</dependency>
<!-- 桥接：log4j1使用Log4j2 也支持其他实现到log4j的桥接，引入不同的jar包即可 -->
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>log4j-over-slf4j</artifactId>
    <version>1.7.25</version>
</dependency>
<!-- 使用异步写日志功能 必须引入此包 -->
<dependency>
    <groupId>com.lmax</groupId>
    <artifactId>disruptor</artifactId>
    <version>3.4.2</version>
</dependency>

-----------------------------------------
    log4j and log4j2 to slf4j (logback)
<!-- begin log4j and log4j2 to slf4j -->
<!-- log4j2 + log4j-api -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.11.1</version>
</dependency>
<!-- log4j to slf4j -->
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>log4j-over-slf4j</artifactId>
    <version>1.7.25</version>
</dependency>
<!-- log4j2 to slf4j + slf4j-api -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-to-slf4j</artifactId>
    <version>2.11.1</version>
</dependency>
<!-- JCL to slf4j -->
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>jcl-over-slf4j</artifactId>
    <version>1.7.25</version>
</dependency>
<!-- logback + logback-core -->
<dependency>
    <groupId>ch.qos.logback</groupId>
    <artifactId>logback-classic</artifactId>
    <version>1.2.3</version>
</dependency>
<!-- end log4j and log4j2 to slf4j -->


注意： jcl-over-slf4j   log4j-slf4j-impl  log4j-over-slf4j

jcl-over-slf4j.jar  -->    (jcl    -> slf4j)    将Jakarta Commons Logging日志框架到 slf4j 的桥接
log4j-over-slf4j.jar-->    (log4j  -> slf4j)    将log4j 的日志，桥接到slf4j
slf4j-api.jar       -->                         slf4j 的api接口jar包
slf4j-ext.jar       -->                         扩展功能
slf4j-jcl.jar       -->    (slf4j -> jcl )      slf4j 转接到 Jakarta Commons Logging日志输出框架 
slf4j-jdk14.jar     -->    (slf4j -> jul )      slf4j 转接到java.util.logging，
     所以这个包不能和jul-to-slf4j.jar同时用，否则会死循环！！ 
slf4j-log4j12.jar   -->    (slf4j -> log4j)     slf4j 转接到log4j,
    所以这个包不能和log4j-over-slf4j.jar同时用，否则会死循环！！


log4j项目已经停止更新了，官方建议用log4j2
log4j-1.2-api.jar   -->    (log4j  -> log4j2)     将log4j 的日志转接到log4j2日志框架
log4j-api.jar       -->                           log4j2的api接口jar包
log4j-core.jar      -->    (log4j2 -> log4j-core) log4j2的日志输出核心jar包
log4j-slf4j-impl.jar-->    (slf4j  -> log4j2)     slf4j 转接到 log4j2 的日志输出框架  (不能和 log4j-to-slf4j同时用)
log4j-to-slf4j.jar  -->    (log4j2 -> slf4j)      将 log4j2的日志桥接到 slf4j  (不能和 log4j-slf4j-impl 同时用)


-----------------------------------------------------------------
log4j -> log4j2 桥接
去掉 log4j 1.x jar，添加log4j-1.2-api.jar，配合 log4j-api-2.x.x.jar 和 log4j-core-2.x.x.jar 即可
log4j-1.2-api.jar
    log4j-api-2.x.x.jar
        log4j-core-2.x.x.jar


------------------------------------------------------------------
slf4j  ->  同时有日志输出和转接功能。核心jar包是 slf4j-api-x.x.x.jar。
因为一般slf4j 只作为桥接用，如果要搭配 slf4j 自带的简单日志输出，那么就加上 slf4j-simple.jar

log4j -> slf4j  ->  将代码中的log4j日志桥接到 slf4j，需要如下jar包
log4j-over-slf4j-x.x.x.jar
    slf4j-api-x.x.x.jar

log4j2 -> slf4j  ->  将代码中的log4j2日志桥接到 slf4j，需要如下jar包
log4j-api-2.x.x.jar
    log4j-to-slf4j-2.x.x.jar
        slf4j-api-x.x.x.jar

slf4j -> log4j  ->  将slf4j日志，采用log4j实现进行输出，需要如下jar包
slf4j-api-x.x.x.jar
    slf4j-log4j12.jar
        log4j-1.2.17.jar

slf4j -> log4j2  ->  将slf4j日志，采用log4j2实现进行输出，需要如下jar包
slf4j-api-x.x.x.jar
    log4j-slf4j-impl.jar
        log4j-api.jar
            log4j-core.jar

slf4j的代理绑定和输出组合起来，就实现了从一种日志框架，转到另一种日志实现框架的效果。
建议在这三种日志混用的情况下，采用如下方案
log4j -> log4j2
slf4j -> log4j2