JUnit 是一个回归测试框架，被开发者用于实施对应用程序的单元测试，加快程序编制速度，同时提高编码的质量。
JUnit 测试框架重要特性： 测试工具 测试套件 测试运行器 测试分类

创建测试类和测试方法
1. 测试类的的命名规则一般是 xxxTest.java
2. 测试类中测试的方法可以有前缀，看统一标准，所以有时候会发现别人的测试方法上有 test 前缀
3. 并且测试方法上加上注解 @Test

===========================================================
JUnit中的注解
@BeforeClass：   针对所有测试，只执行一次，且必须为static void
@Before：        初始化方法，执行当前测试类的每个测试方法前执行。
@Test：          测试方法，在这里可以测试期望异常和超时时间
@After：         释放资源，执行当前测试类的每个测试方法后执行
@AfterClass：    针对所有测试，只执行一次，且必须为static void
@Ignore：        忽略的测试方法（只在测试类的时候生效，单独执行该测试方法无效）
@RunWith:        可以更改测试运行器 ，缺省值 org.junit.runner.Runner

一个单元测试类执行顺序为：
@BeforeClass –> @Before –> @Test –> @After –> @AfterClass
每一个测试方法的调用顺序为：
@Before –> @Test –> @After

===========================================================
使用 @WebMvcTest 注解时，只有一部分的 Bean 能够被扫描得到，它们分别是：
@Controller @ControllerAdvice @JsonComponent

Filter WebMvcConfigurer HandlerMethodArgumentResolver
其他常规的 @Component（包括 @Service、@Repository 等）Bean 则不会被加载到 Spring 测试环境上下文中
所以我在上面使用了数据打桩，Mockito 在这篇文章最后一节